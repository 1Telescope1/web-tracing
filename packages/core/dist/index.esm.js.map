{"version":3,"file":"index.esm.js","sources":["../src/utils/methods.js","../src/utils/constant.js","../src/utils/device.js","../src/utils/session.js","../src/lib/base.js","../src/lib/pv.js","../src/lib/err.js","../src/lib/performance.js","../src/lib/http-request.js","../src/lib/event.js","../src/index.js"],"sourcesContent":["/**\n * 补全字符\n * @param {*} num 初始值\n * @param {*} len 需要补全的位数\n * @param {*} placeholder 补全的值\n * @returns 补全后的值\n */\nfunction pad(num, len, placeholder = '0') {\n  const str = String(num);\n  if (str.length < len) {\n    let result = str;\n    for (let i = 0; i < len - str.length; i += 1) {\n      result = placeholder + result;\n    }\n    return result;\n  }\n  return str;\n}\n\n/**\n * 获取一个随机字符串(全局唯一标识符)\n */\nfunction uuid() {\n  const date = new Date();\n\n  // yyyy-MM-dd的16进制表示,7位数字\n  const hexDate = parseInt(`${date.getFullYear()}${pad(date.getMonth() + 1, 2)}${pad(date.getDate(), 2)}`, 10).toString(16);\n\n  // hh-mm-ss-ms的16进制表示，最大也是7位\n  const hexTime = parseInt(`${pad(date.getHours(), 2)}${pad(date.getMinutes(), 2)}${pad(date.getSeconds(), 2)}${pad(date.getMilliseconds(), 3)}`, 10).toString(16);\n\n  // 第8位数字表示后面的time字符串的长度\n  let guid = hexDate + hexTime.length + hexTime;\n\n  // 补充随机数，补足32位的16进制数\n  while (guid.length < 32) {\n    guid += Math.floor(Math.random() * 16).toString(16);\n  }\n\n  // 分为三段，前两段包含时间戳信息\n  return `${guid.slice(0, 8)}-${guid.slice(8, 16)}-${guid.slice(16)}`;\n}\n\n/**\n * 获取cookie中目标name的值\n * @param {String} name cookie名\n * @returns \n */\nfunction getCookieByName(name) {\n  const result = document.cookie.match(new RegExp(`${name}=([^;]+)(;|$)`));\n  return result ? result[1] : undefined;\n}\n\n/**\n * 向下兼容发送信号的方法\n */\nconst sendBeacon = navigator.sendBeacon\n  ? (url, data) => {\n    if (data) navigator.sendBeacon(url, JSON.stringify(data));\n  }\n  : (url, data) => {\n    // 传统方式传递参数\n    const beacon = new Image();\n    beacon.src = `${url}?v=${encodeURIComponent(JSON.stringify(data))}`;\n  };\n\nconst arrayMap = Array.prototype.map || function polyfillMap(fn) {\n  const result = [];\n  for (let i = 0; i < this.length; i += 1) {\n    result.push(fn(this[i], i, this));\n  }\n  return result;\n};\n\n/**\n * map方法\n * @param {Array} arr 源数组\n * @param {Function} fn 条件函数\n * @returns \n */\nfunction map(arr, fn) {\n  return arrayMap.call(arr, fn);\n}\n\nconst arrayFilter = Array.prototype.filter || function filterPolyfill(fn) {\n  const result = [];\n  for (let i = 0; i < this.length; i += 1) {\n    if (fn(this[i], i, this)) {\n      result.push(this[i]);\n    }\n  }\n  return result;\n};\n\n/**\n * filter方法\n * @param {Array} arr 源数组\n * @param {Function} fn 条件函数\n * @returns \n */\nfunction filter(arr, fn) {\n  return arrayFilter.call(arr, fn);\n}\n\nconst arrayFind = Array.prototype.find || function findPolyfill(fn) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (fn(this[i], i, this)) {\n      return this[i];\n    }\n  }\n  return undefined;\n};\n\n/**\n * find方法\n * @param {Array} arr 源数组\n * @param {Function} fn 条件函数\n * @returns \n */\nfunction find(arr, fn) {\n  return arrayFind.call(arr, fn);\n}\n\n/**\n * 去除头部或者尾部的空格\n * @param {*} str 需要去除的字符串\n * @returns 去除后的字符串\n */\nfunction trim(str = '') {\n  return str.replace(/(^\\s+)|(\\s+$)/, '');\n}\n\n/**\n * 可以理解为异步执行\n * requestIdleCallback 是浏览器空闲时会自动执行内部函数\n * requestAnimationFrame 是浏览器必须执行的\n * 关于 requestIdleCallback 和  requestAnimationFrame 可以参考 https://www.cnblogs.com/cangqinglang/p/13877078.html\n */\nconst nextTime = window.requestIdleCallback || window.requestAnimationFrame || ((callback) => setTimeout(callback, 17));\n\n/**\n * 取消异步执行\n */\nconst cancelNextTime = window.cancelIdleCallback || window.cancelAnimationFrame || clearTimeout;\n\nexport {\n  uuid,\n  getCookieByName,\n  sendBeacon,\n  map,\n  filter,\n  find,\n  trim,\n  nextTime,\n  cancelNextTime,\n}","const DEVICE_KEY = '_warden_device_id'; // deviceKey - 固定\n\nconst SESSION_KEY = '_warden_session_id'; // sessionKey(一个站点只允许运行一个埋点程序) - 固定\n\nconst SURVIVIE_MILLI_SECONDS = 1800000; // session存活时长(30minutes) - 固定\n\nconst MAX_CACHE_LEN = 5; // 最大缓存数\n\nconst MAX_WAITING_TIME = 5000; // 最大等待时间\n\nconst DEBUG_LOG = false; // 是否输出采集信息\n\nexport {\n  DEVICE_KEY,\n  SESSION_KEY,\n  SURVIVIE_MILLI_SECONDS,\n  MAX_CACHE_LEN,\n  MAX_WAITING_TIME,\n  DEBUG_LOG,\n}","import { DEVICE_KEY } from './constant'\nimport { getCookieByName, uuid } from './methods';\n\nconst { screen } = window;\nconst { clientWidth, clientHeight } = document.documentElement;\nconst { width, height, colorDepth, pixelDepth } = screen;\n\nlet deviceId = getCookieByName(DEVICE_KEY);\n\nif (!deviceId) {\n  deviceId = `t_${uuid()}`;\n  document.cookie = `${DEVICE_KEY}=${deviceId};path=/;`;\n}\n\nexport default {\n  clientHeight, // 网页可见区高度\n  clientWidth, // 网页可见区宽度\n  colorDepth, // 显示屏幕调色板的比特深度\n  pixelDepth, // 显示屏幕的颜色分辨率\n  deviceId, // id\n  screenWidth: width, // 显示屏幕的宽度\n  screenHeight: height, // 显示屏幕的高度\n  vendor: navigator.vendor, // 浏览器名称\n  platform: navigator.platform, // 浏览器平台的环境,不是电脑系统的x64这样的(浏览器平台的环境可能是x32)\n};\n","/**\n * 会话控制,此会话只和具体的浏览器相关,与业务无关,和业务意义上的登录态没有任何关联,只是用于追踪同一个浏览器上访问页面的动作\n */\nimport { getCookieByName, uuid } from './methods';\nimport { SURVIVIE_MILLI_SECONDS, SESSION_KEY } from './constant'\n\n/**\n * 刷新会话存续期\n */\nfunction refreshSession() {\n  const id = getCookieByName(SESSION_KEY) || `s_${uuid()}`;\n  const expires = new Date(Date.now() + SURVIVIE_MILLI_SECONDS);\n  document.cookie = `${SESSION_KEY}=${id};path=/;max-age=1800;expires=${expires.toUTCString()}`;\n  return id;\n}\n\n/**\n * 获取sessionid\n */\nfunction getSessionId() {\n  return getCookieByName(SESSION_KEY) || refreshSession();\n}\n\nrefreshSession(); // 初始化\n\nexport {\n  getSessionId,\n  refreshSession,\n};\n","import { uuid, sendBeacon, map, nextTime } from '../utils/methods';\nimport device from '../utils/device';\nimport { getSessionId, refreshSession } from '../utils/session';\nimport { DEBUG_LOG, MAX_CACHE_LEN, MAX_WAITING_TIME } from '../utils/constant';\nimport { version } from '../../package.json'\n\n// 当前应用ID,在整个页面生命周期内不变,单页应用路由变化也不会改变,加载SDK时创建,且只创建一次\nconst pageId = uuid();\n\n// 与一般业务上理解的sessionId做区分,此session与业务无关,单纯就是浏览器端和后端直接的联系\nconst sessionId = getSessionId();\n\nlet requestUrl = ''; // 服务请求地址\nlet events = []; // 批次队列\nlet timer = null; // 定时发送定时器\nconst base = { // 基础数据\n  ...device,\n  pageId,\n  sessionId,\n  sdkVersion: version,\n};\n\n/**\n * 初始化基础数据\n * @param {*} options 基础配置\n */\nfunction init(options = {}) {\n  const { appName, appCode, ext } = options;\n  requestUrl = options.requestUrl;\n  base.appName = appName;\n  base.appCode = appCode;\n  base.ext = ext;\n}\n\n/**\n * 记录需要发送的埋点数据\n * @param {*} e 需要发送的事件信息\n * @param {boolean} flush 是否立即发送\n */\nfunction emit(e, flush = false) {\n  events = events.concat(e); // 追加到事件队列里\n  refreshSession();\n  debug('receive event, waiting to send', e);\n  clearTimeout(timer);\n\n  // 满足最大记录数,立即发送,否则定时发送(flush为true代表立即发送)\n  events.length >= MAX_CACHE_LEN || flush\n    ? send()\n    : timer = setTimeout(() => { send(); }, MAX_WAITING_TIME);\n}\n\n/**\n * 发送埋点信息\n */\nfunction send() {\n  if (events.length) {\n    // 选取首部的部分数据来发送,performance会一次性采集大量数据追加到events中\n    const sendEvents = events.slice(0, MAX_CACHE_LEN); // 需要发送的事件\n    events = events.slice(MAX_CACHE_LEN); // 剩下待发的事件\n    debug('send events', sendEvents);\n\n    const time = Date.now();\n    sendBeacon(requestUrl, {\n      baseInfo: { ...base, sendTime: time },\n      eventInfo: map(sendEvents, (e) => {\n        e.sendTime = time; // 设置发送时间\n\n        // 补充type字段,将click、scroll、change、submit事件作为一类存储\n        if (e.eventType === 'click' || e.eventType === 'scroll' || e.eventType === 'submit' || e.eventType === 'change') {\n          e.type = 'mix';\n          return e;\n        }\n\n        if (e.eventType === 'performance') {\n          // 将性能进行分类,不同类型的性能数据差异较大,分开存放,资源、页面、请求\n          switch (e.eventId) {\n            case 'resource':\n              e.type = 'resourcePerformance';\n              break;\n            case 'page':\n              e.type = 'pagePerformance';\n              break;\n            case 'server':\n              e.type = 'serverPerformance';\n              break;\n            default:\n              break;\n          }\n          return e;\n        }\n        e.type = e.eventType; // 其他类型type同eventType\n        return e;\n      }),\n    });\n    if (events.length) nextTime(send); // 继续传输剩余内容,在下一个时间择机传输\n  }\n}\n\n/**\n * 设置额外的 customerId\n * @param {*} id 需要设置的id\n */\nfunction setCustomerId(id) {\n  base.customerId = id;\n}\n\n/**\n * 设置额外的 userUuid\n * @param {*} id 需要设置的id\n */\nfunction setUserUuid(id) {\n  base.userUuid = id;\n}\n\n/**\n * 控制台输出信息\n * @param  {...any} args 输出信息\n */\nfunction debug(...args) {\n  if (DEBUG_LOG) console.log(...args);\n}\n\nexport {\n  emit,\n  debug,\n  pageId,\n};\n\nexport default {\n  init,\n  emit,\n  pageId,\n  setCustomerId,\n  setUserUuid,\n};\n\n","import { emit, pageId } from './base';\n\nlet oldURL = window.location.href; // 最后一次的url\nlet historyLength = window.history.length; // 最后一次history栈的长度\n\n/**\n * 发送数据\n * option 请求参数\n */\nfunction tracePageView(option = {}) {\n  const { url = window.location.href, referer = oldURL, actions = '', params } = option;\n  let action = actions;\n  if (!action && window.history.length < 50) {\n    action = historyLength === window.history.length ? 'back_forward' : 'navigation';\n    historyLength = window.history.length;\n  }\n  // 如果option.title为空,则等待框架处理document.title,延迟17ms\n  // 为什么是17ms?  一秒60Hz是基准,平均1Hz是17毫秒,只要出来了页面那就有 document.title\n  setTimeout(() => {\n    emit({\n      eventType: 'pv',\n      eventId: pageId,\n      url,\n      referer,\n      params,\n      title: option.title || document.title,\n      action,\n      triggerTime: Date.now(),\n    });\n  }, option.title ? 0 : 17);\n  oldURL = url;\n  historyLength = window.history.length;\n}\n\n/**\n * 路由Pv采集\n * pvHashtag 是否监听hash变化\n */\nfunction init(options = {}) {\n  const { pvCore, pvHashtag } = options;\n  const referer = document.referrer; // 获取是从哪个页面跳转来的\n  if (!pvCore) return;\n\n  let lastIsPop = false; // 最后一次触发路由变化是否为popState触发\n  tracePageView({ url: oldURL, referer });\n\n  if (window.history.pushState) {\n    // 劫持history.pushState history.replaceState\n    const push = window.history.pushState.bind(window.history);\n    window.history.pushState = (data, title, url) => {\n      lastIsPop = false;\n      const result = push(data, title, url);\n      tracePageView({ actions: 'navigation' });\n      return result;\n    };\n\n    const repalce = window.history.replaceState.bind(window.history);\n    window.history.replaceState = (data, title, url) => {\n      lastIsPop = false;\n      const result = repalce(data, title, url);\n      tracePageView({ actions: 'navigation' });\n      return result;\n    };\n\n    // hash变化也会触发popstate事件,而且会先触发popstate事件\n    // 可以使用popstate来代替hashchange,如果支持History H5 Api\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/Window/popstate_event\n    window.addEventListener('popstate', () => {\n      if (window.location.hash !== '') {\n        const oldHost = oldURL.indexOf('#') > 0 // 多页面情况下 history模式刷新还是在pv页面\n          ? oldURL.slice(0, oldURL.indexOf('#'))\n          : oldURL;\n        if (window.location.href.slice(0, window.location.href.indexOf('#')) === oldHost && !pvHashtag) return;\n      }\n      lastIsPop = true;\n      tracePageView();\n    });\n  }\n  // 监听hashchange\n  window.addEventListener('hashchange', () => {\n    if (pvHashtag && !lastIsPop) tracePageView();\n    lastIsPop = false;\n  });\n}\n\nexport default {\n  init,\n  tracePageView\n};\n","import { map, filter } from '../utils/methods';\nimport { emit } from './base';\n\nfunction setFullErrInfo(errorInfo) {\n  const info = {\n    ...errorInfo,\n    eventType: 'error',\n    url: window.location.href,\n    triggerTime: Date.now(),\n  };\n  emit(info);\n}\n\nfunction parseStack(err) {\n  const { stack = '', message = '' } = err;\n  const result = { errMessage: message, errStack: stack };\n\n  if (stack) {\n    const rChromeCallStack = /^\\s*at\\s*([^(]+)\\s*\\((.+?):(\\d+):(\\d+)\\)$/;\n    const rMozlliaCallStack = /^\\s*([^@]*)@(.+?):(\\d+):(\\d+)$/;\n    // chrome中包含了message信息,将其去除,并去除后面的换行符\n    const callStackStr = stack.replace(new RegExp(`^[\\\\w\\\\s:]*${message}\\n`), '');\n    const callStackFrameList = map(filter(callStackStr.split('\\n'), (item) => item), (str) => {\n      const chromeErrResult = str.match(rChromeCallStack);\n      if (chromeErrResult) {\n        return {\n          src: chromeErrResult[2],\n          line: chromeErrResult[3], // 错误发生位置的行数\n          col: chromeErrResult[4], // 错误发生位置的列数\n        };\n      }\n\n      const mozlliaErrResult = str.match(rMozlliaCallStack);\n      if (mozlliaErrResult) {\n        return {\n          src: mozlliaErrResult[2],\n          line: mozlliaErrResult[3],\n          col: mozlliaErrResult[4],\n        };\n      }\n      return {};\n    });\n    const item = callStackFrameList[0] || {};\n    return { ...result, ...item };\n  }\n  return result;\n}\n\nfunction parseError(e) {\n  if (e instanceof Error) {\n    const { message, stack, lineNumber, fileName, columnNumber } = e;\n    if (fileName) {\n      return {\n        errMessage: message,\n        errStack: stack,\n        line: lineNumber,\n        col: columnNumber,\n        src: fileName,\n      };\n    }\n    return parseStack(e);\n  }\n  if (e.message) return parseStack(e);\n  if (typeof e === 'string') return { errMessage: e };\n  return {};\n}\n\nfunction parseErrorEvent(event) {\n  const { target, type } = event;\n  // promise异常\n  // 依旧使用code,不区分是否从promise中捕获的\n  if (type === 'unhandledrejection') return { eventId: 'code', ...parseError(event.reason) };\n\n  // html元素上发生的异常错误\n  if (target.nodeType === 1) {\n    const result = { eventId: target.nodeName };\n    switch (target.nodeName.toLowerCase()) {\n      case 'link':\n        result.src = target.href;\n        break;\n      default:\n        result.src = target.currentSrc || target.src;\n    }\n    return result;\n  }\n\n  // 代码异常\n  if (event.error) {\n    // chrome中的error对象没有fileName等属性,将event中的补充给error对象\n    const e = event.error;\n    e.fileName = e.filename || event.filename;\n    e.columnNumber = e.colno || event.colno;\n    e.lineNumber = e.lineno || event.lineno;\n    return { eventId: 'code', ...parseError(e) };\n  }\n\n  // ie9版本,从全局的event对象中获取错误信息\n  return {\n    eventId: 'code',\n    line: window.event.errorLine,\n    col: window.event.errorCharacter,\n    message: window.event.errorMessage,\n    src: window.event.errorUrl,\n  };\n}\n\nfunction init({ errorCore }) {\n  if (!errorCore) return;\n\n  // 捕获阶段可以获取资源加载错误,script.onError link.onError img.onError,无法知道具体状态\n  window.addEventListener('error', (e) => {\n    setFullErrInfo(parseErrorEvent(e));\n  }, true);\n\n  // promise调用链未捕获异常\n  window.addEventListener('unhandledrejection', (e) => {\n    setFullErrInfo(parseErrorEvent(e));\n  });\n\n  // 劫持console.error\n  const consoleError = console.error;\n  console.error = function ce(...args) {\n    args.forEach((e) => { setFullErrInfo({ eventId: 'code', ...parseError(e) }) });\n    consoleError.apply(console, args);\n  };\n}\n\n/**\n * 主动触发错误上报\n * @param {*} eventId 事件ID\n * @param {*} message 错误信息\n * @param {*} options 自定义配置信息\n * @returns \n */\nfunction traceError(eventId, message, options = {}) {\n  const customErrorRecord = { eventId, errMessage: message, ...options };\n\n  // 针对自定义的异常上报,对params对特殊处理,将其序列化为string\n  const { params } = customErrorRecord;\n  if (params) {\n    customErrorRecord.params = params;\n  }\n  return setFullErrInfo(customErrorRecord);\n}\n\nexport default {\n  init,\n  traceError,\n};\n","import { emit } from './base';\n\n// 兼容判断\nconst supported = {\n  performance: !!window.performance,\n  getEntriesByType: !!(window.performance && performance.getEntriesByType),\n  PerformanceObserver: 'PerformanceObserver' in window,\n  MutationObserver: 'MutationObserver' in window,\n  PerformanceNavigationTiming: 'PerformanceNavigationTiming' in window,\n};\n\n// 资源属性\nconst performanceEntryAttrs = {\n  initiatorType: '',\n  transferSize: 0,\n  encodedBodySize: 0,\n  decodedBodySize: 0,\n  duration: 0,\n  redirectStart: 0,\n  redirectEnd: 0,\n  startTime: 0,\n  fetchStart: 0,\n  domainLookupStart: 0,\n  domainLookupEnd: 0,\n  connectStart: 0,\n  connectEnd: 0,\n  requestStart: 0,\n  responseStart: 0,\n  responseEnd: 0,\n  workerStart: 0,\n};\n\n/**\n * 格式化性能记录,小数位数保留最多两位,等于0的字段不传输,标记为undefined\n */\nfunction normalizePerformanceRecord(e) {\n  Object.keys(e).forEach((p) => {\n    const v = e[p];\n    if (typeof v === 'number') e[p] = v === 0 ? undefined : parseFloat(v.toFixed(2));\n  });\n  return e;\n}\n\n/**\n * 发送页面追踪资源加载性能数据\n * 支持getEntriesByType的情况下才追踪\n */\nfunction traceResourcePerformance(performance) {\n  // 排除xmlhttprequest类型,服务器有响应便会记录,包括404的请求,转由http-request模块负责记录请求数据,区分请求状态\n  // 同时也会排除一些其他类型,比如在引入一个script后会触发一次性能监控,它的类型是beacon,这一次的要排除\n  const observerTypeList = ['img', 'script', 'link', 'audio', 'video', 'css'];\n  const entries = performance.getEntriesByType('resource');\n  const records = [];\n\n  entries.forEach((entry) => {\n    const { initiatorType = '' } = entry; // initiatorType: 通过某种方式请求的资源,比如script,link\n\n    // 只记录observerTypeList中列出的资源类型请求,不在列表中则跳过\n    if (observerTypeList.indexOf(initiatorType.toLowerCase()) < 0) return;\n\n    const value = {};\n    const attrKeys = Object.keys(performanceEntryAttrs);\n    attrKeys.forEach((attr) => { value[attr] = entry[attr] });\n\n    records.push(normalizePerformanceRecord({\n      ...value,\n      eventType: 'performance',\n      eventId: 'resource',\n      src: entry.name,\n      triggerTime: Date.now(), // 非绝对精确,以拿到performance对象的时间来近似计算\n      url: window.location.href,\n    }));\n  });\n  if (records.length) emit(records);\n  return records;\n}\n\n/**\n * 监听异步资源加载信息\n */\nfunction observeAsyncInfo() {\n  const observer = new PerformanceObserver(traceResourcePerformance);\n  observer.observe({ entryTypes: ['resource'] });\n}\n\n/**\n * 监听异步插入的script、link、img,DOM更新操作记录\n */\nfunction observeSourceInsert() {\n  const tags = ['img', 'script', 'link'];\n  // 检测异步插入的script、link、img,会有一些延迟,一些连接建立、包体大小的数据会丢失,精度下降\n  // MutationObserver DOM3 Events规范,是个异步监听,只有在全部DOM操作完成之后才会调用callback\n  const observer = new MutationObserver((mutationsList) => {\n    for (let i = 0; i < mutationsList.length; i += 1) {\n      const startTime = Date.now();\n      const { addedNodes = [] } = mutationsList[i];\n      const records = [];\n      addedNodes.forEach((node) => {\n        const { nodeName } = node;\n        if (tags.indexOf(nodeName.toLowerCase()) !== -1) {\n          node.addEventListener('load', () => {\n            const endTime = Date.now();\n            records.push(normalizePerformanceRecord({ // 没有其他的时间属性,只记录能获取到的\n              eventType: 'performance',\n              eventId: 'resource',\n              src: node.src || node.href,\n              duration: endTime - startTime,\n              triggerTime: Date.now(),\n              url: window.location.href,\n            }));\n          });\n        }\n      });\n      emit(records);\n    }\n  });\n  observer.observe(window.document, {\n    subtree: true, // 目标以及目标的后代改变都会观察\n    childList: true, // 表示观察目标子节点的变化，比如添加或者删除目标子节点，不包括修改子节点以及子节点后代的变化\n    // attributes: true, // 观察属性变动\n    // attributeFilter: ['src', 'href'], // 要观察的属性\n  });\n  // observer.disconnect();\n}\n\n/**\n * 兼容-异步资源\n */\nfunction observeAsyncResource() {\n  if (supported.PerformanceObserver) {\n    observeAsyncInfo(); // 监听异步资源加载性能数据 chrome≥52\n  } else if (supported.MutationObserver) {\n    observeSourceInsert(); // 监听资源、DOM更新操作记录 chrome≥26 ie11\n  }\n}\n\n/**\n * 页面资源加载性能数据\n */\nfunction observeResource() {\n  traceResourcePerformance(window.performance);\n  observeAsyncResource();\n}\n\n/**\n * 发送首次页面性能数据\n */\nfunction observeNavigationTiming() {\n  const times = {};\n  const { performance } = window;\n  let t = performance.timing;\n\n  times.fmp = 0; // 首屏时间 (渲染节点增量最大的时间点)\n  if (supported.getEntriesByType) {\n    const paintEntries = performance.getEntriesByType('paint');\n    if (paintEntries.length) times.fmp = paintEntries[paintEntries.length - 1].startTime;\n\n    // 优先使用 navigation v2  https://www.w3.org/TR/navigation-timing-2/\n    if (supported.PerformanceNavigationTiming) {\n      const nt2Timing = performance.getEntriesByType('navigation')[0];\n      if (nt2Timing) t = nt2Timing;\n    }\n  }\n\n  // 从开始发起这个页面的访问开始算起,减去重定向跳转的时间,在performanceV2版本下才进行计算,v1版本的fetchStart是时间戳而不是相对于访问起始点的相对时间\n  if (times.fmp && supported.PerformanceNavigationTiming) times.fmp -= t.fetchStart;\n\n  // 白屏时间 (从请求开始到浏览器开始解析第一批HTML文档字节的时间差)\n  // times.fpt = t.responseEnd - t.fetchStart;\n\n  times.tti = t.domInteractive - t.fetchStart; // 首次可交互时间\n\n  times.ready = t.domContentLoadedEventEnd - t.fetchStart; // HTML加载完成时间\n\n  times.loadon = t.loadEventStart - t.fetchStart; // 页面完全加载时间\n\n  times.firstbyte = t.responseStart - t.domainLookupStart; // 首包时间\n\n  times.dns = t.domainLookupEnd - t.domainLookupStart; // dns查询耗时\n\n  times.appcache = t.domainLookupStart - t.fetchStart; // dns缓存时间\n\n  times.tcp = t.connectEnd - t.connectStart; // tcp连接耗时\n\n  times.ttfb = t.responseStart - t.requestStart; // 请求响应耗时\n\n  times.trans = t.responseEnd - t.responseStart; // 内容传输耗时\n\n  times.dom = t.domInteractive - t.responseEnd; // dom解析耗时\n\n  times.res = t.loadEventStart - t.domContentLoadedEventEnd; // 同步资源加载耗时\n\n  times.ssllink = t.connectEnd - t.secureConnectionStart; // SSL安全连接耗时\n\n  times.redirect = t.redirectEnd - t.redirectStart; // 重定向时间\n\n  times.unloadTime = t.unloadEventEnd - t.unloadEventStart; // 上一个页面的卸载耗时\n\n  emit(normalizePerformanceRecord({\n    ...times,\n    eventType: 'performance',\n    eventId: 'page',\n    url: window.location.href,\n  }));\n}\n\nfunction init({ performanceFirstResource, performanceCore }) {\n  if (!performanceFirstResource && !performanceCore) return;\n\n  // 初始化方法可能在onload事件之后才执行,此时不会触发load事件了,检查document.readyState属性来判断onload事件是否会被触发\n  if (document.readyState === 'complete') {\n    if (supported.performance && performanceFirstResource) observeNavigationTiming();\n    if (supported.getEntriesByType && performanceCore) observeResource();\n  } else {\n    window.addEventListener('load', () => {\n      if (supported.performance && performanceFirstResource) observeNavigationTiming();\n      if (supported.getEntriesByType && performanceCore) observeResource();\n    })\n  }\n}\n\n/**\n * 主动触发性能事件上报\n * @param {*} eventId 事件ID\n * @param {*} options 自定义配置信息\n */\nfunction tracePerformance(eventId, options) {\n  const record = {\n    triggerTime: Date.now(),\n    url: window.location.href,\n    ...options,\n    eventId,\n    eventType: 'performance',\n  };\n  emit(normalizePerformanceRecord(record));\n}\n\nexport default {\n  init,\n  tracePerformance,\n};\n","import error from './err';\nimport performance from './performance';\n\nclass RequestTemplate {\n  constructor(config = {}) {\n    const list = ['src', 'method', 'duration', 'responseStatus'];\n    list.forEach((key) => { this[key] = config[key] || null; });\n  }\n}\n\n/**\n * fetch请求拦截\n */\nfunction interceptFetch(performanceServer, errorServer) {\n  const nativeFetch = window.fetch;\n  if (nativeFetch) {\n    window.fetch = function traceFetch(target, options = {}) {\n      const fetchStart = Date.now();\n      const { method = 'GET' } = options;\n      const result = nativeFetch(target, options);\n      result.then((res) => {\n        const { url, status, statusText } = res;\n        if (status === 200 || status === 304) {\n          if (performanceServer) {\n            performance.tracePerformance('server', {\n              src: url,\n              duration: Date.now() - fetchStart,\n              responseStatus: status,\n              params: method.toUpperCase() === 'POST' ? options.body : undefined,\n            });\n          }\n        } else if (errorServer) {\n          error.traceError('server', statusText, {\n            src: url,\n            responseStatus: status,\n            params: method.toUpperCase() === 'POST' ? options.body : undefined,\n          });\n        }\n      }, (e) => {\n        // 无法发起请求,连接失败\n        error.traceError('server', e.message, { src: target });\n      });\n      return result;\n    };\n  }\n}\n\n/**\n * ajax, axios请求拦截\n */\nfunction interceptAjax(performanceServer, errorServer) {\n  const { open, send } = XMLHttpRequest.prototype;\n  const _config = new RequestTemplate();\n\n  // 劫持 open方法\n  XMLHttpRequest.prototype.open = function openXHR(method, url, async) {\n    _config.requestMethod = method;\n    _config.src = url;\n    return open.call(this, method, url, async);\n  };\n\n  // 劫持 send方法\n  XMLHttpRequest.prototype.send = function(body) {\n    // body 就是post方法携带的参数\n\n    // readyState发生改变时触发,也就是请求状态改变时\n    // readyState 会依次变为 2,3,4 也就是会触发三次这里\n    this.addEventListener('readystatechange', () => {\n      const {\n        readyState,\n        status,\n        responseURL = _config.src,\n        responseText,\n      } = this;\n      if (readyState === 4) { // 请求已完成,且响应已就绪\n        if (status === 200 || status === 304) {\n          if (performanceServer) {\n            performance.tracePerformance('server', {\n              src: responseURL,\n              responseStatus: status,\n              duration: Date.now() - _config.triggerTime,\n              params: body ? body : undefined,\n            });\n          }\n        } else if (errorServer) {\n          error.traceError('server', responseText, {\n            src: responseURL,\n            responseStatus: status,\n            params: body ? body : undefined,\n          });\n        }\n      }\n    });\n\n    _config.triggerTime = Date.now();\n    return send.call(this, body);\n  };\n}\n\nfunction init({ performanceServer, errorServer }) {\n  if (!performanceServer && !errorServer) return;\n  interceptAjax(performanceServer, errorServer);\n  interceptFetch(performanceServer, errorServer);\n}\n\nexport default {\n  init,\n};\n","import { emit, debug } from './base';\nimport { uuid } from '../utils/methods';\n\nclass RequestTemplate {\n  constructor(config = {}) {\n    const list = ['eventType', 'eventId', 'url', 'referer', 'action', 'params', 'millisecond'];\n    list.forEach((key) => { this[key] = config[key] || null; });\n  }\n}\nclass RequestTemplateClick {\n  constructor(config = {}) {\n    const list = ['eventType', 'eventId', 'url', 'params', 'title', 'x', 'y'];\n    list.forEach((key) => { this[key] = config[key] || null; });\n  }\n}\n\n/**\n * 是否为简单的标签\n * 只包含下面的arr数组内的标签才是简单的标签\n */\nfunction isSimpleEl(children) {\n  if (children.length > 0) {\n    const arr = ['em', 'b', 'strong', 'span', 'img', 'i', 'code'];\n    const a = children.filter(({ tagName }) => arr.indexOf(tagName.toLowerCase()) >= 0);\n    return a.length === children.length;\n  }\n  return true;\n}\n\n/**\n * 获取元素到最外层元素组成的数组\n */\nfunction getNodePath(node, options = {}) {\n  if (!node) return [];\n  const { includeSelf = true, order = 'asc' } = options;\n  let parent = includeSelf ? node : node.parentElement;\n  let result = [];\n  while (parent) {\n    result = order === 'asc' ? result.concat(parent) : [parent].concat(result);\n    parent = parent.parentElement;\n  }\n  return result;\n}\n\n/**\n * 获取元素的关系字符串\n * 例如两层div的关系会得到字符串: div>div\n */\nfunction getNodeXPath(node, curPath = '') {\n  if (!node) return curPath;\n  const parent = node.parentElement;\n  let index = 0; // 这个index 暂时没什么用\n  const { id } = node;\n  const tagName = node.tagName.toLowerCase();\n  const path = curPath ? `>${curPath}` : '';\n  const indexBrackets = index ? `.${index}` : '';\n\n  if (!parent || parent === window || parent === document.documentElement || parent === document.body) return `${tagName}${path}`;\n\n  if (id) return `#${id}${path}`; // 知道了id 就不需要获取上下级关系了(id是唯一的)\n\n  if (parent.children.length > 1) index = Array.prototype.indexOf.call(parent.children, node);\n\n  return getNodeXPath(parent, `${tagName}${indexBrackets}${path}`);\n}\n\n/**\n * 点击事件\n */\nfunction clickCollection() {\n  const _config = new RequestTemplateClick({ eventType: 'click' });\n  document.addEventListener('click', (e) => { // 点击事件\n    debug('caught click event: ', e);\n    let { path } = e;\n    if (path === undefined) path = e.target ? getNodePath(e.target) : []; // 获取被点击的元素到最外层元素组成的数组\n\n    const target = path.find((el) => // 检查被点击的元素以及其父级元素是否有这些属性(从内到外,只会取第一个检查到的)\n      el.hasAttribute && (el.hasAttribute('data-warden-container')\n        || el.hasAttribute('data-warden-event-id')\n        || el.hasAttribute('data-warden-title')));\n    if (!target) return;\n\n    _config.title = extractTitleByTarget(target);\n    _config.eventId = extractDataByPath(path);\n    _config.params = extractParamsByPath(path);\n    _config.elementPath = getNodeXPath(target).slice(-128); // 长度限制128字符\n    const { top, left } = e.target.getBoundingClientRect(); // 元素距离html的距离\n    const { scrollTop, scrollLeft } = document.documentElement; // html距离上和左侧的距离(一般都是0)\n    const x = left + scrollLeft;\n    const y = top + scrollTop;\n    _config.x = x;\n    _config.y = y;\n    _config.triggerTime = Date.now(); // 点击时间\n    _config.url = window.location.href; // 当前页面的url\n    emit(_config);\n  }, true);\n}\n\n/**\n * 加载 & 卸载事件\n */\nfunction dwellCollector(eventUnload) {\n  const _config = new RequestTemplate({ eventType: 'dwell' });\n  window.addEventListener('load', () => { // 加载完成事件\n    _config.entryTime = Date.now();\n  }, true);\n\n  if (!eventUnload) return;\n  window.addEventListener('beforeunload', () => { // 卸载事件\n    _config.eventId = uuid();\n    _config.url = window.location.href; // 当前页面 url\n    _config.referer = document.referrer; // 上级页面 url(从哪个页面跳过来的就是上级页面)\n    _config.triggerTime = Date.now(); // 卸载时间\n    _config.millisecond = Date.now() - _config.entryTime; // 停留多久\n    const mapping = {\n      0: 'navigate', // 网页通过点击链接,地址栏输入,表单提交,脚本操作等方式加载\n      1: 'reload', // 网页通过“重新加载”按钮或者location.reload()方法加载\n      2: 'back_forward', // 网页通过“前进”或“后退”按钮加载\n      255: 'reserved', // 任何其他来源的加载\n    };\n    const { type } = performance.navigation; // 表示加载来源, type为 0,1,2,255\n    _config.operateAction = mapping[type] || null;\n    emit(_config, true);\n  }, false);\n}\n\n/**\n * 提取数据事件ID\n */\nfunction extractDataByPath(list = []) {\n  /* data-warden-event-id */\n  const hasIdEl = getElByAttr(list, 'data-warden-event-id');\n  if (hasIdEl) return hasIdEl.getAttribute('data-warden-event-id');\n\n  /* title */\n  const hasTitleEl = getElByAttr(list, 'title');\n  if (hasTitleEl) return hasTitleEl.getAttribute('title');\n\n  /* container */\n  const container = getElByAttr(list, 'data-warden-container');\n  if (container) {\n    if (container.getAttribute('data-warden-event-id') || container.getAttribute('title')) {\n      return container.getAttribute('data-warden-event-id') || container.getAttribute('title');\n    }\n    const id2 = container.getAttribute('data-warden-container');\n    if (typeof id2 === 'string' && id2) return id2;\n  }\n  return list[0].tagName.toLowerCase();\n}\n\n/**\n * 提取数据参数\n * 如果本身节点没有埋点属性的话会用上一层埋点属性\n */\nfunction extractParamsByPath(list = []) {\n  const regex = /^data-warden-/;\n  let target;\n  let targetIndex;\n  try {\n    // 遍历从子节点到body下最大的节点,遍历他们的属性,直到某个节点的属性能通过校验的节点\n    list.forEach((el, index) => {\n      const attributes = el && el.attributes && Array.from(el.attributes) || [];\n      target = attributes.find((item) => (item.nodeName.match(regex)\n        ? item.nodeName.match(regex)\n        : item.nodeName.indexOf('data-warden-container') !== -1));\n      if (target) {\n        targetIndex = index;\n        throw Error();\n      }\n    });\n  } catch (error) {\n  }\n  if (targetIndex < 0) return {};\n\n  const container = list[targetIndex];\n  const attrList = Array.from(container.attributes) || [];\n  const params = {};\n  attrList.forEach((item) => {\n    // 过滤多结构属性 如 data-warden-event-id width\n    // if(item.nodeName.split(\"-\").length != 3 )return;\n    // 过滤非标准命名 如 data-v-fbcf7454\n    if (item.nodeName.indexOf('data-warden') < 0) return;\n    const key = item.nodeName.replace(regex, '');\n    params[key] = item.nodeValue;\n  });\n\n  // 过滤sdk自定义属性\n  const defaultKey = ['container', 'title', 'event-id'];\n  defaultKey.forEach((item) => { delete params[item]; });\n  return params;\n}\n\n/**\n * 根据属性查找元素\n */\nfunction getElByAttr(list, key) {\n  return list.find((item) => (item.hasAttribute && item.hasAttribute(key)));\n}\n\n/**\n * 获取title属性(data-warden-title 或者 title)\n */\nfunction extractTitleByTarget(target = {}) {\n  const selfTitle = getNodeTitle(target);\n  if (selfTitle) return selfTitle;\n\n  let container = target.parent; // 向上找container\n\n  while (container && container !== document.body) {\n    if (container.hasAttribute('data-warden-container')) break;\n    container = container.parent;\n  }\n  const superTitle = getNodeTitle(container);\n  if (superTitle) return superTitle;\n\n  const { tagName } = target; // 没有container,没有任何title标记的情况下\n  return (!target.hasChildNodes() || tagName.toLowerCase() === 'svg')\n    ? handleLeafNode(target)\n    : handleNoLeafNode(target);\n}\n\n/**\n * 获取元素的 data-warden-title属性或者 title属性\n */\nfunction getNodeTitle(node) {\n  if (node) {\n    return node.hasAttribute('data-warden-title') ? node.getAttribute('data-warden-title') : node.title;\n  }\n  return null;\n}\n\n/**\n * 点击叶子元素(也就是不包含其他HTML元素,也不能有文本内容)\n */\nfunction handleLeafNode(target) {\n  const { tagName, textContent } = target;\n\n  if (tagName === 'IMG') return target.getAttribute('alt') || null;\n\n  if (tagName === 'svg') {\n    const a = [...target.children].find((item) => (item.tagName === 'use'));\n    if (a) return a.getAttribute('xlink:href') || null;\n  }\n  return textContent;\n}\n\n/**\n * 点击非叶子元素\n */\nfunction handleNoLeafNode(target) {\n  const { tagName, textContent } = target;\n  if (tagName === 'A') {\n    const res = isSimpleEl([...target.children]);\n    return res ? textContent : target.getAttribute('href') || null;\n  }\n  if (tagName === 'BUTTON') {\n    const name = target.getAttribute('name');\n    const res = isSimpleEl([...target.children]);\n    return name || res ? textContent : target.getAttribute('href') || null;\n  }\n  const { length } = [...target.children].filter(() => target.hasChildNodes());\n  return length > 0 ? null : textContent;\n}\n\nfunction init({ eventCore, eventUnload }) {\n  if (!eventCore && !eventUnload) return;\n\n  if (eventCore) clickCollection();\n  dwellCollector(eventUnload);\n}\n\n/**\n * 主动触发事件上报\n * @param {*} eventId 事件ID\n * @param {*} title 事件标题\n * @param {*} params 自定义配置信息\n * @returns \n */\nfunction traceCustomEvent(eventId, title, params = {}) {\n  emit({ eventId, title, params, eventType: 'custom', triggerTime: Date.now() });\n}\n\nexport default {\n  init,\n  traceCustomEvent,\n};\n","import base from './lib/base'\nimport pv from './lib/pv'\nimport http from './lib/http-request'\nimport err from './lib/err'\nimport event from './lib/event'\nimport performance from './lib/performance'\n\nconst methods = {\n  setCustomerId: base.setCustomerId,\n  setUserUuid: base.setUserUuid,\n  traceError: err.traceError,\n  tracePerformance: performance.tracePerformance,\n  traceCustomEvent: event.traceCustomEvent,\n  tracePageView: pv.tracePageView,\n}\n\nconst init = (options = {}) => {\n  const _options = {\n    requestUrl: '', // 请求地址\n    appName: '', // 应用名称\n    appCode: '', // 应用code\n    appVersion: '', // 应用版本\n    ext: '', // 自定义全局附加参数\n    debug: false, // 是否开启触发事件时控制台输出\n\n    pvCore: false, // 页面跳转-是否自动发送页面跳转相关数据\n    pvHashtag: false, // 页面跳转-浏览器的动作发生时(例如浏览器的回退按钮)是否监听hash变化,如果是hash路由请开启此开关\n\n    performanceCore: false, // 性能数据-是否采集静态资源、接口的相关数据\n    performanceFirstResource: false, // 性能数据-是否采集首次进入页面的数据(ps: tcp连接耗时,HTML加载完成时间,首次可交互时间)\n    performanceServer: false, // 接口请求-是否采集接口请求(成功的才会采集)\n\n    errorCore: false, // 是否采集异常数据(ps: 资源引入错误,promise错误,控制台输出错误)\n    errorServer: false, // 接口请求-是否采集报错接口数据\n\n    eventCore: false, // 页面点击-是否采集点击事件\n    eventUnload: false, // 页面卸载-是否在页面卸载时采集页面状态信息\n  };\n\n  // 将传过来的参数转换\n  transitionOptions(_options, options);\n\n  base.init(_options);\n  event.init(_options);\n  pv.init(_options);\n  http.init(_options);\n  err.init(_options);\n  performance.init(_options);\n}\n\nconst transitionOptions = (_options, options) => {\n  const {\n    requestUrl,\n    appName,\n    appCode,\n    appVersion,\n    ext,\n    debug,\n    pv = {},\n    performance = {},\n    error = {},\n    event = {},\n  } = options;\n\n  if (!requestUrl) throw Error('请传入requestUrl参数');\n  if (!appName) throw Error('请传入appName参数');\n\n  _options.requestUrl = requestUrl;\n  _options.appName = appName;\n  _options.appCode = appCode;\n  _options.appVersion = appVersion;\n  _options.ext = ext;\n  _options.debug = debug;\n\n  if (typeof pv === 'boolean') {\n    _options.pvCore = _options.pvHashtag = pv;\n  } else {\n    _options.pvCore = Boolean(pv.core);\n    _options.pvHashtag = Boolean(pv.server);\n  }\n\n  if (typeof performance === 'boolean') {\n    _options.performanceCore = _options.performanceFirstResource = _options.performanceServer = performance;\n  } else {\n    _options.performanceCore = Boolean(performance.core);\n    _options.performanceFirstResource = Boolean(performance.firstResource);\n    _options.performanceServer = Boolean(performance.server);\n  }\n\n  if (typeof error === 'boolean') {\n    _options.errorCore = _options.errorServer = error;\n  } else {\n    _options.errorCore = Boolean(error.core);\n    _options.errorServer = Boolean(error.server);\n  }\n\n  if (typeof event === 'boolean') {\n    _options.eventCore = _options.eventUnload = event;\n  } else {\n    _options.eventCore = Boolean(event.core);\n    _options.eventUnload = Boolean(event.unload);\n  }\n}\n\nconst install = (Vue, options = {}) => {\n  init(options);\n  if (Vue.prototype) {\n    Vue.prototype.$trace = { ...methods };\n  } else {\n    Vue.config.globalProperties.$trace = { ...methods };\n  }\n}\n\nexport default {\n  install,\n  init,\n  ...methods\n};\nexport { install, init, methods };"],"names":["pad","num","len","placeholder","str","String","length","result","i","uuid","date","Date","hexDate","parseInt","getFullYear","getMonth","getDate","toString","hexTime","getHours","getMinutes","getSeconds","getMilliseconds","guid","Math","floor","random","slice","getCookieByName","name","document","cookie","match","RegExp","undefined","sendBeacon","navigator","url","data","JSON","stringify","Image","src","encodeURIComponent","arrayMap","Array","prototype","map","fn","this","push","arr","call","arrayFilter","filter","nextTime","window","requestIdleCallback","requestAnimationFrame","callback","setTimeout","DEVICE_KEY","SESSION_KEY","SURVIVIE_MILLI_SECONDS","MAX_CACHE_LEN","MAX_WAITING_TIME","screen","documentElement","clientWidth","clientHeight","width","height","colorDepth","pixelDepth","deviceId","screenWidth","screenHeight","vendor","platform","refreshSession","id","expires","now","toUTCString","getSessionId","pageId","sessionId","requestUrl","events","timer","base","device","sdkVersion","version","init","options","appName","appCode","ext","emit","e","flush","concat","clearTimeout","send","sendEvents","time","baseInfo","sendTime","eventInfo","eventType","type","eventId","setCustomerId","customerId","setUserUuid","userUuid","oldURL","location","href","historyLength","history","tracePageView","option","referer","actions","params","action","title","triggerTime","lastIsPop","repalce","pvCore","pvHashtag","referrer","pushState","bind","replaceState","addEventListener","hash","oldHost","indexOf","setFullErrInfo","errorInfo","parseStack","err","stack","message","errMessage","errStack","rChromeCallStack","rMozlliaCallStack","item","replace","split","chromeErrResult","line","col","mozlliaErrResult","parseError","Error","lineNumber","fileName","columnNumber","parseErrorEvent","event","target","reason","nodeType","nodeName","toLowerCase","currentSrc","error","filename","colno","lineno","errorLine","errorCharacter","errorMessage","errorUrl","consoleError","errorCore","console","args","forEach","apply","traceError","customErrorRecord","supported","performance","getEntriesByType","PerformanceObserver","MutationObserver","PerformanceNavigationTiming","performanceEntryAttrs","initiatorType","transferSize","encodedBodySize","decodedBodySize","duration","redirectStart","redirectEnd","startTime","fetchStart","domainLookupStart","domainLookupEnd","connectStart","connectEnd","requestStart","responseStart","responseEnd","workerStart","normalizePerformanceRecord","Object","keys","p","v","parseFloat","toFixed","traceResourcePerformance","observerTypeList","entries","records","entry","value","attr","observeAsyncInfo","observe","entryTypes","observeSourceInsert","tags","mutationsList","addedNodes","node","endTime","subtree","childList","observeAsyncResource","observeResource","observeNavigationTiming","paintEntries","times","t","timing","fmp","nt2Timing","tti","domInteractive","ready","domContentLoadedEventEnd","loadon","loadEventStart","firstbyte","dns","appcache","tcp","ttfb","trans","dom","res","ssllink","secureConnectionStart","redirect","unloadTime","unloadEventEnd","unloadEventStart","performanceFirstResource","performanceCore","readyState","tracePerformance","RequestTemplate","config","key","_this","interceptFetch","performanceServer","errorServer","nativeFetch","fetch","method","then","status","statusText","responseStatus","toUpperCase","body","interceptAjax","XMLHttpRequest","open","_config","async","requestMethod","_this2","responseURL","responseText","RequestTemplateClick","isSimpleEl","children","tagName","getNodePath","includeSelf","order","parent","parentElement","getNodeXPath","curPath","index","path","indexBrackets","clickCollection","y","find","el","hasAttribute","extractTitleByTarget","extractDataByPath","extractParamsByPath","elementPath","top","getBoundingClientRect","left","scrollTop","scrollLeft","x","dwellCollector","eventUnload","entryTime","millisecond","navigation","operateAction","list","hasIdEl","getElByAttr","getAttribute","hasTitleEl","container","id2","targetIndex","regex","attributes","from","attrList","nodeValue","selfTitle","getNodeTitle","superTitle","hasChildNodes","handleNoLeafNode","handleLeafNode","textContent","a","_toConsumableArray","eventCore","traceCustomEvent","methods","pv","_options","appVersion","debug","transitionOptions","http","Boolean","core","server","firstResource","unload","install","Vue","$trace","globalProperties"],"mappings":"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"}